name: Backend Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: tsundoku01
          MYSQL_DATABASE: tsundoku_db
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          --health-start-period 15s
        volumes:
          - ./db/initdb.d:/docker-entrypoint-initdb.d

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Grant execute permission for gradlew
        run: |
          cd backend
          chmod +x gradlew

      - name: Build backend
        run: |
          cd backend
          ./gradlew build

      - name: Start application
        run: |
          cd backend
          nohup java -jar build/libs/*.jar &
          echo "Waiting for application to start..."
          sleep 20

      - name: Test login endpoint (成功ケース)
        run: |
          response=$(curl -s -X POST http://localhost:8080/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"userId":"test_user","password":"password"}')
          echo "Response: $response"
          
          # Check if response contains success status code
          if ! echo "$response" | grep -q '"statusCode":200'; then
            echo "Error: Expected status code 200"
            exit 1
          fi
          
          # Check if response contains token and userId
          if ! echo "$response" | grep -q '"token":\s*".*"' || \
             ! echo "$response" | grep -q '"userId":\s*"test_user"'; then
            echo "Error: Response missing token or userId"
            exit 1
          fi

      - name: Test login endpoint (失敗ケース - パスワード誤り)
        run: |
          response=$(curl -s -X POST http://localhost:8080/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"userId":"test_user","password":"wrong_password"}')
          echo "Response: $response"
          
          # Check if response contains error status code
          if ! echo "$response" | grep -q '"statusCode":400'; then
            echo "Error: Expected status code 400"
            exit 1
          fi
          
          # Check if response contains error message
          if ! echo "$response" | grep -q "ユーザIDもしくはパスワードが間違っています"; then
            echo "Error: Expected error message not found"
            exit 1
          fi

      - name: Test login endpoint (失敗ケース - 存在しないユーザー)
        run: |
          response=$(curl -s -X POST http://localhost:8080/api/auth/login \
            -H "Content-Type: application/json" \
            -d '{"userId":"nonexistent_user","password":"password"}')
          echo "Response: $response"
          
          # Check if response contains error status code
          if ! echo "$response" | grep -q '"statusCode":400'; then
            echo "Error: Expected status code 400"
            exit 1
          fi
          
          # Check if response contains error message
          if ! echo "$response" | grep -q "ユーザIDもしくはパスワードが間違っています"; then
            echo "Error: Expected error message not found"
            exit 1
          fi
